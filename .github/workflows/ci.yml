name: Deploy test scenes

on:
  schedule:
    - cron: '0 10 * * *'
  workflow_dispatch:
  push:
    branches:
      - "main"
  pull_request:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Check if sdk version changed only on cron job
        id: schedule
        if: ${{ github.event_name == 'schedule' }}
        run: exit $(curl -s https://api.github.com/repos/decentraland/js-sdk-toolchain/commits/main | jq -r "((now - (.commit.author.date | fromdateiso8601) ) / (60*60*24) | trunc)")

      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: install decentraland
        run: npm i -g decentraland@latest

      - name: install
        run: npm ci

      - name: build scenes
        run: npm run build-scenes

      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: sdk-test-scenes
          tags: ${{ github.sha }} next
          dockerfiles: |
            ./Dockerfile
      # Podman Login action (https://github.com/redhat-actions/podman-login) also be used to log in,
      # in which case 'username' and 'password' can be omitted.
      - name: Push To quay.io
        if: github.ref == 'refs/heads/main'
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: quay.io/decentraland
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Print image url
        if: github.ref == 'refs/heads/main'
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

      - name: Trigger deployment
        id: deploy
        if: github.ref == 'refs/heads/main'
        uses: decentraland/dcl-deploy-action@main
        with:
          dockerImage: "${{ steps.push-to-quay.outputs.registry-path }}"
          serviceName: sdk-test-scenes
          env: dev
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Slack Notification
        if: ${{ always() && steps.schedule.outcome != 'failure'}}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: sdk-alerts
          SLACK_COLOR: ${{ job.status }}
          SLACK_USERNAME: sdk
          SLACK_TITLE: Deploy URL
          SLACK_MESSAGE: https://sdk-test-scenes.decentraland.io/
          SLACK_ICON: https://decentraland.org/icons/icon-144x144.png?v=b57be10317666edc399e2bdf863f26bf
